{"version":3,"sources":["components/AppHeader.jsx","components/NotFound.jsx","components/services/SwapiService.jsx","components/Spinner/Spinner.jsx","components/ErrorIndicator.jsx","components/RandomPlanet/PlanetView.jsx","components/RandomPlanet/RandomPlanet.jsx","components/SwapiServiceContext.jsx","components/hoc/withData.jsx","components/ItemList.jsx","components/sw-components/ItemLists.jsx","components/ItemDetails/ViewItemDetails.jsx","components/ItemDetails/ItemDetails.jsx","components/sw-components/Details.jsx","components/common/Row.jsx","components/pages/PeoplePage.jsx","components/pages/PlanetsPage.jsx","components/pages/StarshipsPage.jsx","App.js","index.js"],"names":["AppHeader","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","NotFound","SwapiService","_apiBase","getAllPeople","_callee","res","regenerator_default","wrap","_context","prev","next","_this","getResource","sent","abrupt","results","map","_transformPerson","stop","getPerson","_callee2","person","_context2","concat","getAllPlanets","_callee3","_context3","_transformPlanet","getPlanet","_callee4","planet","_context4","getAllStarships","_callee5","_context5","_transformStarship","getStarship","_callee6","starship","_context6","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","height","mass","eyeColor","eye_color","birthYear","birth_year","gender","url","fetch","this","then","json","catch","err","console","log","data","item","match","Spinner","style","width","ErrorIndicator","src","alt","PlanetView","_ref","Fragment","onError","e","target","onerror","RandomPlanet","swapiService","state","loading","error","setState","onPlanetLoaded","updatePlanet","Math","floor","random","setInterval","_this$state","hasData","errorMessage","components_ErrorIndicator","spinner","components_Spinner_Spinner","content","RandomPlanet_PlanetView","Component","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withData","View","getData","_Component","_temp","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","inherits","createClass","key","value","update","_this2","assign","props","ItemList","onItemSelected","items","onClick","withChildFunction","Wrapped","fn","renderName","_ref2","PersonList","PlanetList","StarshipList","_ref3","ViewItemDetails","imageFolder","children","Children","child","cloneElement","Record","field","label","ItemDetails","updateItem","_this$props","itemId","prevProps","ItemDetails_ViewItemDetails","PersonDetails","components_ItemDetails_ItemDetails","ItemDetails_Record","PlanetDetails","_ref4","StarshipDetails","_ref5","_ref6","Row","left","right","withRouter","history","params","common_Row","push","Details_PersonDetails","App","showRandomPlanet","components_RandomPlanet_RandomPlanet","components_AppHeader","Switch","Route","path","render","exact","component","PeoplePage","StarshipsPage","Details_StarshipDetails","PlanetsPage","Details_PlanetDetails","Redirect","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f05aeade.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n\r\n\r\n          <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n            <div className=\"container\">\r\n\r\n              <Link className=\"navbar-brand\" to=\"/\">Star Wars</Link>\r\n\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\"\r\n                      aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\">{}</span>\r\n              </button>\r\n\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <NavLink className=\"nav-item nav-link\" to=\"/people/\">People</NavLink>\r\n                  <NavLink className=\"nav-item nav-link\" to=\"/planets/\">Planets</NavLink>\r\n                  <NavLink className=\"nav-item nav-link\" to=\"/starships/\">Starships</NavLink>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n\r\n  )\r\n};\r\nexport default AppHeader;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n        <h1>NotFound</h1>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","export default class SwapiService {\r\n\r\n  _apiBase = 'https://swapi.co/api';\r\n\r\n  async getResource(url) {\r\n    const data = await fetch(`${this._apiBase}${url}`)\r\n          .then(res => res.json())\r\n          .catch(err => {\r\n            console.log('Error: ', err)\r\n          });\r\n    return data\r\n  }\r\n\r\n  // get all people\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  };\r\n\r\n  // get people by ID\r\n  getPerson = async (id) => {\r\n    const person = await this.getResource(`/people/${id}`);\r\n    return this._transformPerson(person);\r\n  };\r\n\r\n\r\n  // get all planets\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  };\r\n\r\n  // get planet by ID\r\n  getPlanet = async (id) => {\r\n    const planet = await this.getResource(`/planets/${id}`);\r\n    return this._transformPlanet(planet);\r\n  };\r\n\r\n  // get all starships\r\n  getAllStarships = async () => {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.map(this._transformStarship);\r\n  };\r\n\r\n  // get starship by ID\r\n  getStarship = async (id) => {\r\n    const starship = await this.getResource(`/starships/${id}`);\r\n    return this._transformStarship(starship);\r\n  };\r\n\r\n\r\n  _extractId(item) {\r\n    const idRegEx = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegEx)[1];\r\n  }\r\n\r\n\r\n  // data transformation Planet\r\n  _transformPlanet = (planet) => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    }\r\n  };\r\n\r\n\r\n  // data transformation Starship\r\n  _transformStarship = (starship) => {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      costInCredits: starship.cost_in_credits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargo_capacity\r\n    }\r\n  };\r\n\r\n  // data transformation Person\r\n  _transformPerson = (person) => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      height: person.height,\r\n      mass: person.mass,\r\n      eyeColor: person.eye_color,\r\n      birthYear: person.birth_year,\r\n      gender: person.gender\r\n    }\r\n  }\r\n\r\n\r\n}","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n        <div className=\"lds-css ng-scope\">\r\n          <div style={{width: '100%', height: '100%'}} className=\"lds-double-ring\">\r\n            <div>\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n  )\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n        <div className=\"error-indicator\">\r\n          <img src=\"img/error-image.png\" width={85} alt=\"Error\"/>\r\n          <span className=\"boom\">Boom!</span>\r\n          <span>Something has gone terribly wrong</span>\r\n          <span>(but we already sent droids to fix it)</span>\r\n        </div>\r\n  )\r\n};\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nconst PlanetView = ({planet}) => {\r\n\r\n  const {id, name, population, diameter, rotationPeriod} = planet;\r\n\r\n  return (\r\n        <React.Fragment>\r\n          <div className=\"col-md-4 col-sm-6 mx-auto text-center\">\r\n            <img\r\n                  className=\"img-fluid radius-img\"\r\n                  src={`../img/planets/${id}.jpg`}\r\n                  width={220}\r\n                  alt={name}\r\n                  onError={(e) => {\r\n                    e.target.onerror = null;\r\n                    e.target.src = \"../img/error-image.png\"\r\n                  }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8 mx-auto\">\r\n            <div className=\"random-planet-info\">\r\n              <h2 className=\"text-uppercase\">{name}</h2>\r\n              <ul className=\"list-info\">\r\n                <li>ID: <span>{id}</span></li>\r\n                <li>Population: <span>{population}</span></li>\r\n                <li>Rotation: <span>{rotationPeriod}</span></li>\r\n                <li>Diameter: <span>{diameter}</span></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n  )\r\n};\r\n\r\nexport default PlanetView;","import React, {Component} from 'react';\r\nimport SwapiService from \"../services/SwapiService\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\nimport PlanetView from \"./PlanetView\";\r\n\r\nclass RandomPlanet extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    setInterval(this.updatePlanet, 5000)\r\n  }\r\n\r\n\r\n  onError = () => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false,\r\n    })\r\n  };\r\n\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({\r\n      planet,\r\n      loading: false\r\n    })\r\n  };\r\n\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 59 + 2);\r\n    this.swapiService.getPlanet(id)\r\n          .then(this.onPlanetLoaded)\r\n          .catch(this.onError)\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const {planet, loading, error} = this.state;\r\n\r\n    const hasData = !(loading || error);\r\n\r\n    const errorMessage = error ? <ErrorIndicator/> : null;\r\n\r\n    const spinner = loading ? <Spinner/> : null;\r\n\r\n    const content = hasData ? <PlanetView planet={planet}/> : null;\r\n\r\n    return (\r\n          <div className=\"container\">\r\n            <div className=\"wrap-random-planet bg-light mt-3 p-3\">\r\n              <div className=\"row\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n              </div>\r\n            </div>\r\n          </div>\r\n    )\r\n  }\r\n}\r\nexport default RandomPlanet;\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst {\r\n  Provider: SwapiServiceProvider,\r\n  Consumer: SwapiServiceConsumer,\r\n} = React.createContext();\r\n\r\n\r\nexport {\r\n  SwapiServiceProvider,\r\n  SwapiServiceConsumer\r\n}","import React, {Component} from 'react';\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\n\r\n\r\nconst withData = (View, getData) => {\r\n\r\n  return class extends Component {\r\n\r\n    state = {\r\n      data: null,\r\n      loading: true,\r\n      error: false\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n      this.update()\r\n    }\r\n\r\n\r\n    update() {\r\n      this.setState({\r\n        loading: true,\r\n        error: false\r\n      });\r\n\r\n      getData()\r\n            .then((data) => {\r\n              this.setState({\r\n                data,\r\n                loading: false\r\n              });\r\n            })\r\n            .catch(() => {\r\n              this.setState({\r\n                error: true,\r\n                loading: false\r\n              });\r\n            });\r\n    }\r\n\r\n    render() {\r\n      const {data, loading, error} = this.state;\r\n\r\n      if (loading) {\r\n        return <Spinner/>;\r\n      }\r\n\r\n      if (error) {\r\n        return <ErrorIndicator/>;\r\n      }\r\n\r\n      return <View {...this.props} data={data}/>\r\n    }\r\n  };\r\n\r\n\r\n};\r\n\r\n\r\nexport default withData;","import React from 'react';\r\n\r\nconst ItemList = (props) => {\r\n\r\n  const {data, onItemSelected} = props;\r\n\r\n  const items = data.map(({id, name}) => {\r\n    return (\r\n          <li key={id}\r\n              onClick={() => onItemSelected(id)}\r\n              className=\"list-group-item list-group-item-action\">\r\n            {name}\r\n          </li>\r\n    )\r\n  });\r\n\r\n  return (\r\n        <div className=\"item-list\">\r\n          <ul className=\"list-group\">\r\n            {items}\r\n          </ul>\r\n          <button type=\"button\" className=\"btn btn-warning mt-3\">More items</button>\r\n        </div>\r\n  );\r\n\r\n};\r\n\r\nexport default ItemList;","import React from 'react';\r\n\r\nimport SwapiService from \"../services/SwapiService\";\r\nimport withData from \"../hoc/withData\";\r\nimport ItemList from \"../ItemList\";\r\n\r\n\r\nconst {getAllPeople, getAllPlanets, getAllStarships} = new SwapiService();\r\n\r\n\r\nconst withChildFunction = (Wrapped, fn) => {\r\n  return (props) => {\r\n    return (\r\n          <Wrapped {...props}>\r\n            {fn}\r\n          </Wrapped>\r\n    )\r\n  }\r\n};\r\n\r\nconst renderName = ({name}) => <span>{name}</span>;\r\nconst renderModelAndName = ({name, model}) => <span>{name} (#{model})</span>;\r\n\r\n\r\nconst PersonList = withData(\r\n      withChildFunction(ItemList, renderName),\r\n      getAllPeople);\r\n\r\nconst PlanetList = withData(\r\n      withChildFunction(ItemList, renderName),\r\n      getAllPlanets);\r\n\r\nconst StarshipList = withData(\r\n      withChildFunction(ItemList, renderModelAndName),\r\n      getAllStarships);\r\n\r\nexport {\r\n  PersonList,\r\n  PlanetList,\r\n  StarshipList\r\n}","import React from 'react';\r\n\r\n\r\nconst ViewItemDetails = ({item, imageFolder, children}) => {\r\n\r\n  const {id, name} = item;\r\n  return (\r\n        <div className=\"d-flex\">\r\n          <div className=\"wrap-img\">\r\n            <img src={`../img/${imageFolder}/${id}.jpg`} className=\"radius-img\" width={180} alt={name}/>\r\n          </div>\r\n          <div className=\"short-details-info ml-3\">\r\n            <h2 className=\"text-uppercase\">{name}</h2>\r\n            <ul className=\"list-info\">\r\n\r\n              {\r\n                React.Children.map(children, (child) => {\r\n                  return React.cloneElement(child, {item});\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n  )\r\n};\r\n\r\nexport default ViewItemDetails;","import React, {Component} from 'react';\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport ViewItemDetails from \"./ViewItemDetails\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\n\r\n\r\nconst Record = ({item, field, label}) => {\r\n  return (\r\n        <li><span>{label}:</span> {item[field]}</li>\r\n  )\r\n};\r\n\r\nexport {Record}\r\n\r\n\r\nclass ItemDetails extends Component {\r\n\r\n  state = {\r\n    item: null,\r\n    loading: true,\r\n    error: false\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.updateItem();\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.updateItem();\r\n    }\r\n  }\r\n\r\n\r\n  updateItem = () => {\r\n    const {itemId, getData} = this.props;\r\n    if (!itemId) {\r\n      return;\r\n    }\r\n\r\n    getData(itemId)\r\n          .then((item) => {\r\n            this.setState({\r\n              item,\r\n              loading: false\r\n            })\r\n          })\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    const {item, loading, error} = this.state;\r\n\r\n    const hasData = !(loading || error);\r\n\r\n    const errorMessage = error ? <ErrorIndicator/> : null;\r\n\r\n    const spinner = loading ? <Spinner/> : null;\r\n\r\n    const content = hasData ? <ViewItemDetails\r\n          item={item}\r\n          imageFolder={this.props.imageFolder}\r\n          children={this.props.children}\r\n    /> : <span>Select a person from a list</span>;\r\n\r\n\r\n    return (\r\n          <div className=\"short-details bg-light p-3\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemDetails;","import React from 'react';\r\nimport ItemDetails, {Record} from \"../ItemDetails/ItemDetails\";\r\n\r\n\r\nimport {SwapiServiceConsumer} from \"../SwapiServiceContext\";\r\n\r\nconst PersonDetails = ({itemId}) => {\r\n  return (\r\n        <SwapiServiceConsumer>\r\n          {\r\n            ({getPerson}) => {\r\n              return (\r\n                    <ItemDetails\r\n                          itemId={itemId}\r\n                          getData={getPerson}\r\n                          imageFolder=\"characters\"\r\n                    >\r\n                      <Record field=\"gender\" label=\"Gender\"/>\r\n                      <Record field=\"eyeColor\" label=\"Eye Color\"/>\r\n\r\n                    </ItemDetails>\r\n              )\r\n            }\r\n          }\r\n        </SwapiServiceConsumer>\r\n  )\r\n};\r\n\r\nconst PlanetDetails = ({itemId}) => {\r\n  return (\r\n        <SwapiServiceConsumer>\r\n          {\r\n            ({getPlanet}) => {\r\n              return (\r\n                    <ItemDetails\r\n                          itemId={itemId}\r\n                          getData={getPlanet}\r\n                          imageFolder=\"planets\"\r\n                    >\r\n                      <Record field=\"name\" label=\"Name\"/>\r\n                      <Record field=\"population\" label=\"Population\"/>\r\n                      <Record field=\"rotationPeriod\" label=\"RotationPeriod\"/>\r\n                      <Record field=\"diameter\" label=\"Diameter\"/>\r\n                    </ItemDetails>\r\n              )\r\n            }\r\n          }\r\n        </SwapiServiceConsumer>\r\n  )\r\n};\r\n\r\nconst StarshipDetails = ({itemId}) => {\r\n  return (\r\n        <SwapiServiceConsumer>\r\n          {\r\n            ({getStarship}) => {\r\n              return (\r\n                    <ItemDetails\r\n                          itemId={itemId}\r\n                          getData={getStarship}\r\n                          imageFolder=\"starships\"\r\n                    >\r\n                      <Record field=\"name\" label=\"Name\"/>\r\n                      <Record field=\"model\" label=\"Model\"/>\r\n                      <Record field=\"costInCredits\" label=\"Cost In Credits\"/>\r\n                    </ItemDetails>\r\n              )\r\n            }\r\n          }\r\n        </SwapiServiceConsumer>\r\n  )\r\n};\r\n\r\nexport {\r\n  PersonDetails,\r\n  PlanetDetails,\r\n  StarshipDetails\r\n}","import React from 'react';\r\n\r\nconst Row = ({left, right}) => {\r\n  return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-6 mb-3\">\r\n            {left}\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-6 mb-3\">\r\n            {right}\r\n          </div>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {PersonList} from \"../sw-components/ItemLists\";\r\nimport {PersonDetails} from \"../sw-components/Details\";\r\nimport Row from \"../common/Row\";\r\n\r\nconst PeoplePage = ({history, match}) => {\r\n\r\n  const {id} = match.params;\r\n\r\n  return (\r\n        <Row\r\n              left={<PersonList onItemSelected={(id) => history.push(id)}/>}\r\n              right={<PersonDetails itemId={id}/>}\r\n        />\r\n  );\r\n};\r\n\r\nexport default withRouter(PeoplePage);","import React from 'react';\r\nimport {PlanetList} from \"../sw-components/ItemLists\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst PlanetsPage = ({history}) => {\r\n  return (\r\n        <PlanetList\r\n              onItemSelected={(id) => history.push(id)}/>\r\n  );\r\n};\r\nexport default withRouter(PlanetsPage);","import React from 'react';\r\nimport {StarshipList} from \"../sw-components/ItemLists\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst StarshipsPage = ({history}) => {\r\n  return (\r\n        <StarshipList\r\n              onItemSelected={(id) => history.push(id)}/>\r\n  );\r\n};\r\nexport default withRouter(StarshipsPage);","import React, {Component} from 'react';\n\n\nimport AppHeader from \"./components/AppHeader\";\n\nimport './App.css';\n\n\nimport NotFound from \"./components/NotFound\";\nimport RandomPlanet from \"./components/RandomPlanet/RandomPlanet\";\nimport {SwapiServiceProvider} from \"./components/SwapiServiceContext\";\n\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\n\nimport PeoplePage from './components/pages/PeoplePage';\nimport PlanetsPage from './components/pages/PlanetsPage';\nimport StarshipsPage from './components/pages/StarshipsPage';\n\nimport SwapiService from \"./components/services/SwapiService\";\n\n\nimport {PlanetDetails, StarshipDetails} from \"./components/sw-components/Details\";\n\nclass App extends Component {\n\n  state = {\n    showRandomPlanet: true,\n    swapiService: new SwapiService(),\n  };\n\n  render() {\n    const planet = this.state.showRandomPlanet ? <RandomPlanet/> : null;\n\n    return (\n\n          <SwapiServiceProvider value={this.state.swapiService}>\n\n            <AppHeader/>\n\n            {planet}\n\n            <div className=\"container content mt-5\">\n\n              <Switch>\n                <Route path=\"/\"\n                       render={() => <h2>Welcome to StarDB</h2>}\n                       exact/>\n                <Route path=\"/people/:id?\" component={PeoplePage}/>\n\n                <Route path=\"/starships\" exact component={StarshipsPage}/>\n                <Route path=\"/starships/:id\"\n                       render={({match}) => {\n                         const {id} = match.params;\n                         return <StarshipDetails itemId={id}/>\n                       }}/>\n\n                <Route path=\"/planets\" exact component={PlanetsPage}/>\n                <Route path=\"/planets/:id\"\n                       render={({match}) => {\n                         const {id} = match.params;\n                         return <PlanetDetails itemId={id}/>\n                       }}/>\n\n                <Route path=\"/not-found\" component={NotFound}/>\n                <Redirect to=\"/not-found\"/>\n              </Switch>\n\n\n            </div>\n\n          </SwapiServiceProvider>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App/>\n      </BrowserRouter>,\n      document.getElementById('root'));\n\n"],"sourceRoot":""}